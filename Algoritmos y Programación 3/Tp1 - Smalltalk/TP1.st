Object subclass: #AlgoTrip	instanceVariableNames: 'listaDeViajes listaDeCiudades listaDeHoteles listaDePaquetes'	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 17:20'!obtenerPaquete: nombreDePaquete	| paqueteBuscado |		listaDePaquetes  		do: [ : unPaquete | 			unPaquete obtenerNombre == nombreDePaquete				ifTrue: [ paqueteBuscado := unPaquete ].				].				^ paqueteBuscado.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:23'!obtenerDuracionEnDiasDelViaje: nombreDeViaje	| duracion  |		duracion := 0.	listaDeViajes do: [ :unViaje |		unViaje obtenerNombre == nombreDeViaje		ifTrue: [ (unViaje obtenerCosto ~= 0) 		ifTrue: [ duracion := unViaje obtenerDuracion ].		].	].		^ duracion.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 16:29'!obtenerViaje: nombreDeViaje	| viajeBuscado |		listaDeViajes 		do: [ : unViaje | 			unViaje obtenerNombre == nombreDeViaje				ifTrue: [ viajeBuscado := unViaje ].				].				^ viajeBuscado.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:23'!obtenerCostoDelViaje: nombreDeViaje		| costo |		listaDeViajes 		do: [ :unViaje | 			unViaje  obtenerNombre == nombreDeViaje				ifTrue: [ costo := unViaje obtenerCosto ].	].	^ costo    ! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 16:46'!solicitarComidaEspecialAbordoPara: nombreDeViaje	| unViaje |		unViaje := self obtenerViaje: nombreDeViaje.	unViaje solicitarComidaEspecialAbordo.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:23'!agregarHotel: unNombre en: unaCiudad conPrecioPorNoche: unPrecio		| unHotel |		unHotel := Hotel new.	listaDeHoteles add: unHotel.	unHotel cargarNombreDeHotel: unNombre deCiudad: unaCiudad conPrecioPorNoche: unPrecio.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:23'!agregarCiudad: nombreDeCiudad dePais: nombreDePais conCodigo: codigoDeCiudad latitud: latitudDeCiudad longitud: longitudDeCiudad		| unaCiudad |	unaCiudad := Ciudad new.	unaCiudad cargarNombreDeCiudad: nombreDeCiudad dePais: nombreDePais  conCodigo: codigoDeCiudad latitud: latitudDeCiudad  longitud: longitudDeCiudad.	listaDeCiudades add: unaCiudad.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:23'!crearViaje: unNombreDeViaje		| unViaje |		unViaje := Viaje new.		unViaje guardarNombre: unNombreDeViaje.	listaDeViajes add: unViaje.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 16:51'!agregarEstadiaEnViaje: nombreDeViaje enHotel: nombreDeHotel desde: fechaDeLlegada hasta: fechaDeSalida		| unViaje |		unViaje := self obtenerViaje: nombreDeViaje.	unViaje guardarEstadiaEnHotel: nombreDeHotel desde: fechaDeLlegada hasta: fechaDeSalida conPrecioPorNoche: (self buscarPrecioDeHotel: nombreDeHotel).! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 16:38'!agregarAsistenciaAlViajeroAlViaje: nombreDeViaje	| unViaje |		unViaje := self obtenerViaje: nombreDeViaje.	unViaje agregarAsistenciaAlViajero.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/28/2018 20:10'!buscarCiudad: ciudad	| ciudadBuscada |		listaDeCiudades 		do: [ :unaCiudad | 			unaCiudad  obtenerCodigo == ciudad				ifTrue: [ ciudadBuscada  := unaCiudad ].		].	^ ciudadBuscada ! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:23'!agregarPaquete: nombreDePaquete	| unPaquete |		unPaquete := Paquete new.	unPaquete guardarNombre: nombreDePaquete.	listaDePaquetes add: unPaquete.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 17:18'!agregarVueloEnPaquete: nombreDePaquete de: ciudadDeOrigen a: ciudadDeDestino enFecha: fechaDeVuelo	| destino origen unPaquete |		origen := self buscarCiudad: ciudadDeOrigen.	destino := self buscarCiudad: ciudadDeDestino.	unPaquete := self obtenerPaquete: nombreDePaquete.	unPaquete guardarVueloConOrigen: origen destino: destino yFecha: fechaDeVuelo. ! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 19:42'!agregarPaquete: nombreDePaquete enViaje: nombreDeViaje	| unPaquete unViaje|		unPaquete := Paquete new.	unPaquete := self obtenerPaquete: nombreDePaquete.	unViaje := self obtenerViaje: nombreDeViaje.	unViaje agregarPaquete: unPaquete.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/29/2018 22:09'!buscarPrecioDeHotel: nombreDeHotel	| precioBuscado |		listaDeHoteles 		do: [ :unHotel| 			unHotel  obtenerNombre  == nombreDeHotel 				ifTrue: [ precioBuscado := unHotel obtenerPrecioPorNoche].		].^ precioBuscado.! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 17:23'!agregarVueloEnViaje: nombreDeViaje de: ciudadDeOrigen a: ciudadDeDestino enFecha: fechaDeVuelo	| destino origen unViaje |		origen := self buscarCiudad: ciudadDeOrigen.	destino := self buscarCiudad: ciudadDeDestino.	unViaje := self obtenerViaje: nombreDeViaje.	unViaje guardarVueloConOrigen: origen destino: destino yFecha: fechaDeVuelo. 				! !!AlgoTrip methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 17:34'!agregarEstadiaEnPaquete: nombreDePaquete enHotel: nombreDeHotel  desde: fechaDeLlegada hasta: fechaDeSalida	| unPaquete |		unPaquete  := self obtenerPaquete: nombreDePaquete.	unPaquete  guardarEstadiaEnHotel: nombreDeHotel desde: fechaDeLlegada hasta: fechaDeSalida conPrecioPorNoche: (self buscarPrecioDeHotel: nombreDeHotel).! !!AlgoTrip methodsFor: 'initialization' stamp: 'Gaston 4/30/2018 17:13'!initialize	listaDeViajes  := OrderedCollection new.	listaDeCiudades := OrderedCollection new.	listaDeHoteles := OrderedCollection new.	listaDePaquetes := OrderedCollection new.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!AlgoTrip class	instanceVariableNames: 'listaDeCiudades'!Object subclass: #Ciudad	instanceVariableNames: 'nombre pais codigo latitud longitud'	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!Ciudad methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 16:34'!calcularDistanciaCon: unaCiudad| radioTerrestre latitud2 latitud1 longitud2 longitud1 distancia |radioTerrestre := 6371.00.latitud1 := self obtenerLatitud degreesToRadians.longitud1 := self obtenerLongitud degreesToRadians.latitud2 := unaCiudad obtenerLatitud degreesToRadians.longitud2 := unaCiudad obtenerLongitud degreesToRadians.			distancia := 2 * radioTerrestre * 	(((((((latitud2 - latitud1) / 2) sin) squared)	+ ((latitud1 cos) * (latitud2 cos) * 	((((longitud2 - longitud1) / 2) sin) squared))) sqrt) arcSin).^ distancia! !!Ciudad methodsFor: 'as yet unclassified' stamp: 'Gaston 4/28/2018 19:59'!cargarNombreDeCiudad: nombreDeCiudad dePais: nombreDePais conCodigo: codigoDeCiudad latitud: latitudDeCiudad longitud: longitudDeCiudad	nombre := nombreDeCiudad.	pais := nombreDePais.	codigo := codigoDeCiudad.	latitud := latitudDeCiudad.	longitud := longitudDeCiudad! !!Ciudad methodsFor: 'as yet unclassified' stamp: 'Gaston 4/28/2018 21:06'!obtenerPais	^pais! !!Ciudad methodsFor: 'as yet unclassified' stamp: 'Gaston 4/28/2018 19:59'!obtenerCodigo	^ codigo! !!Ciudad methodsFor: 'as yet unclassified' stamp: 'Gaston 4/28/2018 20:09'!obtenerLongitud	^ longitud! !!Ciudad methodsFor: 'as yet unclassified' stamp: 'Gaston 4/28/2018 20:08'!obtenerLatitud	^ latitud! !Object subclass: #Estadia	instanceVariableNames: 'hotel nochesDeEstadia precioDeHotelPorNoche'	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!Estadia methodsFor: 'as yet unclassified' stamp: 'Gaston 4/29/2018 22:06'!guardarHotel: nombreDeHotel desde: fechaDeLlegada hasta: fechaDeSalida conPrecioPorNoche: precioPorNoche		hotel := nombreDeHotel.	nochesDeEstadia := (fechaDeSalida asDate  - fechaDeLlegada asDate ) days.	precioDeHotelPorNoche := precioPorNoche.! !!Estadia methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:24'!obtenerCosto	^ (nochesDeEstadia * precioDeHotelPorNoche).! !!Estadia methodsFor: 'as yet unclassified' stamp: 'Gaston 4/29/2018 22:11'!obtenerDuracionDeEstadia	^ nochesDeEstadia.! !Object subclass: #Hotel	instanceVariableNames: 'nombre ciudad precioPorNoche'	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!Hotel methodsFor: 'as yet unclassified' stamp: 'Gaston 4/29/2018 22:10'!obtenerPrecioPorNoche	^ precioPorNoche.! !!Hotel methodsFor: 'as yet unclassified' stamp: 'Gaston 4/29/2018 22:09'!obtenerNombre	^ nombre. ! !!Hotel methodsFor: 'as yet unclassified' stamp: 'Gaston 4/28/2018 22:28'!cargarNombreDeHotel: unNombre deCiudad: unaCiudad conPrecioPorNoche: unPrecio	nombre := unNombre.	ciudad := unaCiudad.	precioPorNoche := unPrecio.! !Object subclass: #Viaje	instanceVariableNames: 'nombre ciudadDeOrigen ciudadDeDestino fecha cantidadDeVuelos listaDeVuelos estadia costo listaDePaquetes'	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:22'!obtenerCosto	^ costo.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 19:45'!guardarNombre: unNombreDeViaje	nombre := unNombreDeViaje.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 19:45'!obtenerNombre^ nombre. ! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:22'!guardarEstadiaEnHotel: nombreDeHotel desde: fechaDeLlegada hasta: fechaDeSalida conPrecioPorNoche: precioPorNoche	estadia  := Estadia  new.	estadia  guardarHotel: nombreDeHotel  desde: fechaDeLlegada  hasta: fechaDeSalida conPrecioPorNoche: precioPorNoche.	costo := costo + estadia obtenerCosto.	! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:21'!obtenerDuracion	| duracion |		duracion := 0.	(listaDeVuelos notEmpty) ifTrue:   [		duracion := ((listaDeVuelos last obtenerFecha asDate) - (listaDeVuelos first obtenerFecha asDate)) days. ].		estadia ifNotNil:[		duracion := estadia obtenerDuracionDeEstadia].		listaDePaquetes  do: [ :paquete|			duracion  := duracion + paquete obtenerDuracion.		].		^ duracion + 1.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:07'!guardarVueloConOrigen: origen destino: destino yFecha: fechaDeVuelo	| unVuelo |		(origen obtenerPais == destino obtenerPais) ifTrue: [ 		unVuelo := VueloDomestico new. ] 	ifFalse: [ 		unVuelo := VueloInternacional new. ].		unVuelo guardarOrigen: origen destino: destino yFecha: fechaDeVuelo.	listaDeVuelos add: unVuelo.	cantidadDeVuelos := cantidadDeVuelos + 1.	costo := costo + unVuelo obtenerCosto.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 16:47'!solicitarComidaEspecialAbordo	costo := costo + 100.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:08'!agregarPaquete: paquete	listaDePaquetes add: paquete.	costo := costo + paquete obtenerCosto.! !!Viaje methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 19:04'!agregarAsistenciaAlViajero		| asistenciaAlViajeroEnVuelos asistenciaAlViajeroEnEstadia |		asistenciaAlViajeroEnVuelos := 0.	asistenciaAlViajeroEnEstadia := 0.	listaDeVuelos do: [ :vuelo|		asistenciaAlViajeroEnVuelos := asistenciaAlViajeroEnVuelos + (vuelo obtenerCosto * 0.1).		].	estadia ifNotNil: [  		asistenciaAlViajeroEnEstadia := asistenciaAlViajeroEnEstadia + ((estadia obtenerDuracionDeEstadia) * 30)].		costo := self obtenerCosto + asistenciaAlViajeroEnVuelos + asistenciaAlViajeroEnEstadia.! !!Viaje methodsFor: 'initialization' stamp: 'Gaston 4/30/2018 17:38'!initialize		listaDeVuelos := OrderedCollection new.	listaDePaquetes := OrderedCollection new.	cantidadDeVuelos := 0.	costo := 0.! !Viaje subclass: #Paquete	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!Paquete methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 19:06'!obtenerCosto	| costoDeHoteles costoDeVuelos costoConDescuento |	costoDeHoteles := 0.	costoDeVuelos := 0.		estadia ifNotNil: [  		costoDeHoteles := costoDeHoteles + (estadia obtenerCosto)].		listaDeVuelos  do: [ :vuelo|		costoDeVuelos := costoDeVuelos + (vuelo obtenerCosto ).	].	costoConDescuento := (0.8 * costoDeHoteles) + (0.9 * costoDeVuelos).		 ^ costoConDescuento.! !Object subclass: #Vuelo	instanceVariableNames: 'ciudadDeDestino ciudadDeOrigen fecha'	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!Vuelo methodsFor: 'as yet unclassified' stamp: 'Gaston 4/29/2018 20:39'!guardarOrigen: origen destino: destino yFecha: fechaDeVuelo	ciudadDeOrigen := origen.	ciudadDeDestino := destino.	fecha := fechaDeVuelo.! !!Vuelo methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 16:21'!obtenerCosto		! !!Vuelo methodsFor: 'as yet unclassified' stamp: 'Gaston 4/29/2018 21:00'!obtenerFecha	^fecha! !Vuelo subclass: #VueloDomestico	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!VueloDomestico methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 16:22'!obtenerCosto	^ (ciudadDeOrigen calcularDistanciaCon: ciudadDeDestino).! !Vuelo subclass: #VueloInternacional	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: '96491'!!VueloInternacional methodsFor: 'as yet unclassified' stamp: 'Gaston 4/30/2018 20:25'!obtenerCosto	^ ((ciudadDeOrigen calcularDistanciaCon: ciudadDeDestino)*1.5*1.05).! !